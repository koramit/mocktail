<?php

namespace App\Managers;

use App\Models\Note;
use Carbon\Carbon;
use Illuminate\Support\Facades\Request;
use Illuminate\Support\Facades\Session;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Facades\Validator;

class ReferNoteManager
{
    protected $note;

    public function __construct(Note $note)
    {
        $this->note = $note;
    }

    public function setFlashData($report = false)
    {
        // title and menu
        if ($report) {
            Request::session()->flash('page-title', '‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏ï‡∏±‡∏ß: '.($this->note->referCase->patient_name ?? '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠'));
            Request::session()->flash('messages', [
                'status' => 'info',
                'messages' => [
                    '‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô',
                ],
            ]);
        } else {
            Request::session()->flash('page-title', '‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏ï‡∏±‡∏ß: '.($this->note->referCase->patient_name ?? '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠'));
            Request::session()->flash('messages', [
                'status' => 'info',
                'messages' => [
                    '‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πà‡∏≠‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á‡πÑ‡∏î‡πâ',
                    '‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ <span class="font-semibold">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢</span> ‡∏ó‡πâ‡∏≤‡∏¢‡∏ü‡∏≠‡∏£‡πå‡∏°',
                    '‡πÄ‡∏°‡∏∑‡πà‡∏≠ <span class="font-semibold">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢</span> ‡πÅ‡∏•‡πâ‡∏ß‡∏¢‡∏±‡∏á‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏Ñ‡∏™‡∏à‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏î',
                ],
            ]);
        }

        Request::session()->flash('main-menu-links', [ // need check abilities
            ['icon' => 'clipboard-list', 'label' => '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏™', 'route' => 'refer-cases'],
            // ['icon' => 'clinic', 'label' => 'Clinics', 'route' => 'prototypes/ClinicsIndex'],
            // ['icon' => 'procedure', 'label' => 'Procedures', 'route' => 'prototypes/ProceduresIndex'],
        ]);
        Request::session()->flash('action-menu', [
            // ['icon' => 'wheelchair', 'label' => 'Add Stay case', 'action' => 'add-stay-case'],
            // ['icon' => 'ambulance', 'label' => 'Add Stay case without HN (soon... üò§)', 'action' => 'not-ready'],
            // ['icon' => 'procedure', 'label' => 'Add IPD case (later... üòÖ)', 'action' => 'not-ready'],
        ]);
    }

    public function getContents()
    {
        $contents = $this->note->contents;
        $contents['patient']['name'] = $this->note->referCase->patient_name;
        $contents['patient']['hn'] = $this->note->referCase->patient ? $this->note->referCase->patient->hn : $this->note->referCase->hn;

        return $contents;
    }

    public function getConfigs()
    {
        return [
            'insurances' => ['‡∏Å‡∏£‡∏°‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Å‡∏•‡∏≤‡∏á', '‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏±‡∏á‡∏Ñ‡∏°', '30 ‡∏ö‡∏≤‡∏ó', '‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏≠‡∏á'],
            'meals' => ['‡∏õ‡∏Å‡∏ï‡∏¥', '‡∏≠‡∏¥‡∏™‡∏•‡∏≤‡∏°', '‡∏°‡∏±‡∏á‡∏™‡∏ß‡∏¥‡∏£‡∏±‡∏ï‡∏¥'],
            'symptoms' => [
                ['label' => '‡πÑ‡∏Ç‡πâ', 'name' => 'fever'],
                ['label' => '‡πÑ‡∏≠', 'name' => 'cough'],
                ['label' => '‡πÄ‡∏à‡πá‡∏ö‡∏Ñ‡∏≠', 'name' => 'sore_throat'],
                ['label' => '‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡∏°‡∏π‡∏Å', 'name' => 'rhinorrhoea'],
                ['label' => '‡∏°‡∏µ‡πÄ‡∏™‡∏°‡∏´‡∏∞', 'name' => 'sputum'],
                ['label' => '‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢', 'name' => 'fatigue'],
                ['label' => '‡∏à‡∏°‡∏π‡∏Å‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Å‡∏•‡∏¥‡πà‡∏ô', 'name' => 'anosmia'],
                ['label' => '‡∏•‡∏¥‡πâ‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏™', 'name' => 'loss_of_taste'],
                ['label' => '‡∏õ‡∏ß‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠', 'name' => 'myalgia'],
                ['label' => '‡∏ó‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢', 'name' => 'diarrhea'],
            ],
            'patchEndpoint' => url('/forms/'.$this->note->id),
            'note_id' => $this->note->id,
        ];
    }

    public static function initNote()
    {
        return [
            'patient' => [
                'sat_code' => null,
                'insurance' => null,
                'date_symptom_start' => null,
                'date_covid_infected' => null,
                'date_admit_origin' => null,
                'date_refer' => null,
                'date_expect_discharge' => null,
                'date_quarantine_end' => null,
                'meal' => null,
            ],
            'vital_signs' => [
                'temperature_celsius' => null,
                'pulse_per_minute' => null,
                'respiration_rate_per_minute' => null,
                'sbp' => null,
                'dbp' => null,
                'o2_sat' => null,
            ],
            'symptoms' => [
                'asymptomatic_symptom' => false,
                'asymptomatic_detail' => null,
                'fever' => false,
                'cough' => false,
                'sore_throat' => false,
                'rhinorrhoea' => false,
                'sputum' => false,
                'fatigue' => false,
                'anosmia' => false,
                'loss_of_taste' => false,
                'myalgia' => false,
                'diarrhea' => false,
                'other_symptoms' => null,
            ],
            'diagnosis' => [
                'asymptomatic_diagnosis' => false,
                'uri' => false,
                'date_uri' => null,
                'pneumonia' => false,
                'date_pneumonia' => null,
                'gastroenteritis' => false,
                'other_diagnosis' => null,
            ],
            'adr' => [
                'no_adr' => false,
                'adr_detail' => null,
            ],
            'comorbids' => [
                'no_comorbids' => false,
                'dm' => false,
                'ht' => false,
                'other_comorbids' => null,
            ],
            'treatments' => [
                'temperature_per_day' => null,
                'oxygen_sat_RA_per_day' => null,
                'favipiravir' => false,
                'date_start_favipiravir' => null,
                'date_stop_favipiravir' => null,
                'date_repeat_NP_swap' => null,
            ],
            'uploads' => [
                'film' => null,
                'lab' => null,
                'id_document' => null,
            ],
        ];
    }

    public static function validate(Note $note)
    {
        $rules = [
            'sat_code' => 'required|alpha_num|size:18',
            'insurance' => 'required|string',
            'date_symptom_start' => 'required|date',
            'date_covid_infected' => 'required|date',
            'date_admit_origin' => 'required|date',
            'date_refer' => 'required|date',
            'date_expect_discharge' => 'required|date',
            'date_quarantine_end' => 'required|date',
            'meal' => 'required|string',

            'temperature_celsius' => 'required|numeric',
            'pulse_per_minute' => 'required|integer',
            'respiration_rate_per_minute' => 'required|integer',
            'sbp' => 'required|integer',
            'dbp' => 'required|integer',
            'o2_sat' => 'required|integer',

            'temperature_per_day' => 'required|string',
            'oxygen_sat_RA_per_day' => 'required|string',
        ];

        if (Session::get('center')->id === config('app.main_center_id')) {
            $rules['hn'] = 'required|digits:8';
        }

        $data = Request::all();
        Validator::make($data['patient'] + $data['vital_signs'] + $data['treatments'], $rules)->validate();

        $patient = $data['patient'];

        // validate hn
        $patientExists = (new PatientManager())->manage($patient['hn']);
        if (! $patientExists['found']) {
            return [
                'hn' => '‡πÑ‡∏°‡πà‡∏û‡∏ö HN ‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö',
            ];
        } else {
            if ($note->referCase->patient_id !== $patientExists['patient']->id) {
                $note->referCase->patient_id = $patientExists['patient']->id;
                $note->referCase->save();
            }
        }

        // *** validate timeline
        $timeline = [
            'date_symptom_start',
            'date_covid_infected',
            'date_admit_origin',
            'date_refer',
            'date_expect_discharge',
            'date_quarantine_end',
        ];
        for ($i = 0; $i < count($timeline) - 1; $i++) {
            if (Carbon::create($patient[$timeline[$i + 1]])->lessThanOrEqualTo(Carbon::create($patient[$timeline[$i]]))) {
                return [
                    $timeline[$i] => '‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á',
                    $timeline[$i + 1] => '‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á',
                ];
            }
        }

        $errors = []; // we can combine errors now

        // validate symptoms
        $symptoms = $data['symptoms'];
        if ($symptoms['asymptomatic_symptom']) {
            if (! $symptoms['asymptomatic_detail']) {  // if no symtoms then need detail
                $errors['asymptomatic_detail'] = '‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î';
            }
        } else {
            if (! ($symptoms['fever'] ||
                $symptoms['cough'] ||
                $symptoms['sore_throat'] ||
                $symptoms['rhinorrhoea'] ||
                $symptoms['sputum'] ||
                $symptoms['fatigue'] ||
                $symptoms['anosmia'] ||
                $symptoms['loss_of_taste'] ||
                $symptoms['myalgia'] ||
                $symptoms['diarrhea'] ||
                $symptoms['other_symptoms'])
            ) { // if not asymptomatic then need some symptoms
                $errors['symptoms'] = '‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Asymptomatic';
            }
        }

        // validate diagnosis
        $diagnosis = $data['diagnosis'];
        if (! $diagnosis['asymptomatic_diagnosis']) {
            if (! ($diagnosis['uri'] ||
                $diagnosis['pneumonia'] ||
                $diagnosis['gastroenteritis'] ||
                $diagnosis['other_diagnosis'])
            ) {
                $errors['diagnosis'] = '‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢';
            }

            if ($diagnosis['uri']) {
                if (! $diagnosis['date_uri']) {
                    $errors['date_uri'] = '‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏á ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£ URI';
                } elseif (
                    Carbon::create($diagnosis['date_uri'])->lessThan(Carbon::create($patient['date_symptom_start'])) ||
                    Carbon::create($diagnosis['date_uri'])->greaterThanOrEqualTo(Carbon::create($patient['date_refer']))
                ) {
                    $errors['date_uri'] = '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£ URI ‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡πÑ‡∏õ Hospitel';
                }
            }

            if ($diagnosis['pneumonia']) {
                if (! $diagnosis['date_pneumonia']) {
                    $errors['date_pneumonia'] = '‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏á ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£ PNEUMONIA';
                } elseif (
                    Carbon::create($diagnosis['date_pneumonia'])->lessThan(Carbon::create($patient['date_symptom_start'])) ||
                    Carbon::create($diagnosis['date_pneumonia'])->greaterThanOrEqualTo(Carbon::create($patient['date_refer']))
                ) {
                    $errors['date_pneumonia'] = '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£ PNEUMONIA ‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡πÑ‡∏õ Hospitel';
                }
            }
        }

        // validate adr
        $adr = $data['adr'];
        if (! $adr['no_adr'] && ! $adr['adr_detail']) {
            $errors['adr_detail'] = '‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏á ‡∏¢‡∏≤/‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏û‡πâ ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡πÅ‡∏û‡πâ';
        }

        // validate comorbids
        $comorbids = $data['comorbids'];
        if (! $comorbids['no_comorbids']) {
            if (! ($comorbids['dm'] ||
                $comorbids['ht'] ||
                $comorbids['other_comorbids'])
            ) {
                $errors['comorbids'] = '‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß';
            }
        }

        // treatments validate
        $treatments = $data['treatments'];
        if ($treatments['favipiravir']) {
            if (! $treatments['date_start_favipiravir']) {
                $errors['date_start_favipiravir'] = '‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏á ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏¢‡∏≤';
            } elseif (
                Carbon::create($treatments['date_start_favipiravir'])->lessThan(Carbon::create($patient['date_admit_origin'])) ||
                Carbon::create($treatments['date_start_favipiravir'])->greaterThanOrEqualTo(Carbon::create($patient['date_refer']))
            ) {
                $errors['date_start_favipiravir'] = '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏¢‡∏≤ ‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡πÑ‡∏õ Hospitel';
            }

            if (! $treatments['date_stop_favipiravir']) {
                $errors['date_stop_favipiravir'] = '‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏á ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏£‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà';
            } elseif ($treatments['date_start_favipiravir'] && (
                Carbon::create($treatments['date_stop_favipiravir'])->lessThan(Carbon::create($treatments['date_start_favipiravir'])) ||
                Carbon::create($treatments['date_stop_favipiravir'])->greaterThanOrEqualTo(Carbon::create($patient['date_refer']))
            )) {
                $errors['date_stop_favipiravir'] = '‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏£‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏¢‡∏≤‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡πÑ‡∏õ Hospitel';
            }
        }

        // treatments validate
        $uploads = $data['uploads'];
        if (! $uploads['film']) {
            $errors['film'] = ['‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ô‡∏ö‡∏†‡∏≤‡∏û Film Chest ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î'];
        } elseif (! Storage::exists('uploads/'.$uploads['film'])) {
            $errors['film'] = ['‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏ô‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà'];
        }

        if (! $uploads['lab']) {
            $errors['lab'] = ['‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ô‡∏ö‡∏†‡∏≤‡∏û ‡πÉ‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏• COVID'];
        } elseif (! Storage::exists('uploads/'.$uploads['lab'])) {
            $errors['lab'] = ['‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏ô‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà'];
        }

        if (! $patient['hn']) {
            if (! $uploads['id_document']) {
                $errors['id_document'] = ['‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ô‡∏ö‡∏†‡∏≤‡∏û ‡∏£‡∏π‡∏õ‡∏ñ‡πà‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô'];
            } elseif (! Storage::exists('uploads/'.$uploads['id_document'])) {
                $errors['id_document'] = ['‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏ô‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà'];
            }
        }

        // check candidate keys
        $count = Note::where('contents->patient->sat_code', $patient['sat_code'])
                     ->where('contents->patient->date_admit_origin', $patient['date_admit_origin'])
                     ->count();
        if ($count > 1) {
            $errors['sat_code'] = '‡πÄ‡∏Ñ‡∏™‡∏ã‡πâ‡∏≥ ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö SAT CODE ‡πÅ‡∏•‡∏∞ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•';
        }

        if (count($errors) > 0) {
            return $errors;
        }
    }
}
